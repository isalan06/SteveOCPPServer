/*
 * This file is generated by jOOQ.
 */
package jooq.steve.db.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import jooq.steve.db.Keys;
import jooq.steve.db.Stevedb;
import jooq.steve.db.tables.records.ChargingSchedulePeriodRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChargingSchedulePeriod extends TableImpl<ChargingSchedulePeriodRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>stevedb.charging_schedule_period</code>
     */
    public static final ChargingSchedulePeriod CHARGING_SCHEDULE_PERIOD = new ChargingSchedulePeriod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChargingSchedulePeriodRecord> getRecordType() {
        return ChargingSchedulePeriodRecord.class;
    }

    /**
     * The column
     * <code>stevedb.charging_schedule_period.charging_profile_pk</code>.
     */
    public final TableField<ChargingSchedulePeriodRecord, Integer> CHARGING_PROFILE_PK = createField(DSL.name("charging_profile_pk"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>stevedb.charging_schedule_period.start_period_in_seconds</code>.
     */
    public final TableField<ChargingSchedulePeriodRecord, Integer> START_PERIOD_IN_SECONDS = createField(DSL.name("start_period_in_seconds"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stevedb.charging_schedule_period.power_limit</code>.
     */
    public final TableField<ChargingSchedulePeriodRecord, BigDecimal> POWER_LIMIT = createField(DSL.name("power_limit"), SQLDataType.DECIMAL(15, 1).nullable(false), this, "");

    /**
     * The column <code>stevedb.charging_schedule_period.number_phases</code>.
     */
    public final TableField<ChargingSchedulePeriodRecord, Integer> NUMBER_PHASES = createField(DSL.name("number_phases"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    private ChargingSchedulePeriod(Name alias, Table<ChargingSchedulePeriodRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChargingSchedulePeriod(Name alias, Table<ChargingSchedulePeriodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>stevedb.charging_schedule_period</code> table
     * reference
     */
    public ChargingSchedulePeriod(String alias) {
        this(DSL.name(alias), CHARGING_SCHEDULE_PERIOD);
    }

    /**
     * Create an aliased <code>stevedb.charging_schedule_period</code> table
     * reference
     */
    public ChargingSchedulePeriod(Name alias) {
        this(alias, CHARGING_SCHEDULE_PERIOD);
    }

    /**
     * Create a <code>stevedb.charging_schedule_period</code> table reference
     */
    public ChargingSchedulePeriod() {
        this(DSL.name("charging_schedule_period"), null);
    }

    public <O extends Record> ChargingSchedulePeriod(Table<O> child, ForeignKey<O, ChargingSchedulePeriodRecord> key) {
        super(child, key, CHARGING_SCHEDULE_PERIOD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Stevedb.STEVEDB;
    }

    @Override
    public List<UniqueKey<ChargingSchedulePeriodRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CHARGING_SCHEDULE_PERIOD_UQ_CHARGING_SCHEDULE_PERIOD);
    }

    @Override
    public List<ForeignKey<ChargingSchedulePeriodRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK_CHARGING_SCHEDULE_PERIOD_CHARGING_PROFILE_PK);
    }

    private transient ChargingProfile _chargingProfile;

    public ChargingProfile chargingProfile() {
        if (_chargingProfile == null)
            _chargingProfile = new ChargingProfile(this, Keys.FK_CHARGING_SCHEDULE_PERIOD_CHARGING_PROFILE_PK);

        return _chargingProfile;
    }

    @Override
    public ChargingSchedulePeriod as(String alias) {
        return new ChargingSchedulePeriod(DSL.name(alias), this);
    }

    @Override
    public ChargingSchedulePeriod as(Name alias) {
        return new ChargingSchedulePeriod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChargingSchedulePeriod rename(String name) {
        return new ChargingSchedulePeriod(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChargingSchedulePeriod rename(Name name) {
        return new ChargingSchedulePeriod(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, BigDecimal, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
