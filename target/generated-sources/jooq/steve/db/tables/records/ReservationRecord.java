/*
 * This file is generated by jOOQ.
 */
package jooq.steve.db.tables.records;


import jooq.steve.db.tables.Reservation;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationRecord extends UpdatableRecordImpl<ReservationRecord> implements Record7<Integer, Integer, Integer, String, DateTime, DateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stevedb.reservation.reservation_pk</code>.
     */
    public ReservationRecord setReservationPk(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.reservation_pk</code>.
     */
    public Integer getReservationPk() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stevedb.reservation.connector_pk</code>.
     */
    public ReservationRecord setConnectorPk(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.connector_pk</code>.
     */
    public Integer getConnectorPk() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stevedb.reservation.transaction_pk</code>.
     */
    public ReservationRecord setTransactionPk(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.transaction_pk</code>.
     */
    public Integer getTransactionPk() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>stevedb.reservation.id_tag</code>.
     */
    public ReservationRecord setIdTag(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.id_tag</code>.
     */
    public String getIdTag() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stevedb.reservation.start_datetime</code>.
     */
    public ReservationRecord setStartDatetime(DateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.start_datetime</code>.
     */
    public DateTime getStartDatetime() {
        return (DateTime) get(4);
    }

    /**
     * Setter for <code>stevedb.reservation.expiry_datetime</code>.
     */
    public ReservationRecord setExpiryDatetime(DateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.expiry_datetime</code>.
     */
    public DateTime getExpiryDatetime() {
        return (DateTime) get(5);
    }

    /**
     * Setter for <code>stevedb.reservation.status</code>.
     */
    public ReservationRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.reservation.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, DateTime, DateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, DateTime, DateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Reservation.RESERVATION.RESERVATION_PK;
    }

    @Override
    public Field<Integer> field2() {
        return Reservation.RESERVATION.CONNECTOR_PK;
    }

    @Override
    public Field<Integer> field3() {
        return Reservation.RESERVATION.TRANSACTION_PK;
    }

    @Override
    public Field<String> field4() {
        return Reservation.RESERVATION.ID_TAG;
    }

    @Override
    public Field<DateTime> field5() {
        return Reservation.RESERVATION.START_DATETIME;
    }

    @Override
    public Field<DateTime> field6() {
        return Reservation.RESERVATION.EXPIRY_DATETIME;
    }

    @Override
    public Field<String> field7() {
        return Reservation.RESERVATION.STATUS;
    }

    @Override
    public Integer component1() {
        return getReservationPk();
    }

    @Override
    public Integer component2() {
        return getConnectorPk();
    }

    @Override
    public Integer component3() {
        return getTransactionPk();
    }

    @Override
    public String component4() {
        return getIdTag();
    }

    @Override
    public DateTime component5() {
        return getStartDatetime();
    }

    @Override
    public DateTime component6() {
        return getExpiryDatetime();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getReservationPk();
    }

    @Override
    public Integer value2() {
        return getConnectorPk();
    }

    @Override
    public Integer value3() {
        return getTransactionPk();
    }

    @Override
    public String value4() {
        return getIdTag();
    }

    @Override
    public DateTime value5() {
        return getStartDatetime();
    }

    @Override
    public DateTime value6() {
        return getExpiryDatetime();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public ReservationRecord value1(Integer value) {
        setReservationPk(value);
        return this;
    }

    @Override
    public ReservationRecord value2(Integer value) {
        setConnectorPk(value);
        return this;
    }

    @Override
    public ReservationRecord value3(Integer value) {
        setTransactionPk(value);
        return this;
    }

    @Override
    public ReservationRecord value4(String value) {
        setIdTag(value);
        return this;
    }

    @Override
    public ReservationRecord value5(DateTime value) {
        setStartDatetime(value);
        return this;
    }

    @Override
    public ReservationRecord value6(DateTime value) {
        setExpiryDatetime(value);
        return this;
    }

    @Override
    public ReservationRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ReservationRecord values(Integer value1, Integer value2, Integer value3, String value4, DateTime value5, DateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReservationRecord
     */
    public ReservationRecord() {
        super(Reservation.RESERVATION);
    }

    /**
     * Create a detached, initialised ReservationRecord
     */
    public ReservationRecord(Integer reservationPk, Integer connectorPk, Integer transactionPk, String idTag, DateTime startDatetime, DateTime expiryDatetime, String status) {
        super(Reservation.RESERVATION);

        setReservationPk(reservationPk);
        setConnectorPk(connectorPk);
        setTransactionPk(transactionPk);
        setIdTag(idTag);
        setStartDatetime(startDatetime);
        setExpiryDatetime(expiryDatetime);
        setStatus(status);
    }
}
