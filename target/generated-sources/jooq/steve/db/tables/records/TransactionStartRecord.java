/*
 * This file is generated by jOOQ.
 */
package jooq.steve.db.tables.records;


import jooq.steve.db.tables.TransactionStart;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionStartRecord extends UpdatableRecordImpl<TransactionStartRecord> implements Record6<Integer, DateTime, Integer, String, DateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stevedb.transaction_start.transaction_pk</code>.
     */
    public TransactionStartRecord setTransactionPk(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.transaction_pk</code>.
     */
    public Integer getTransactionPk() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stevedb.transaction_start.event_timestamp</code>.
     */
    public TransactionStartRecord setEventTimestamp(DateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.event_timestamp</code>.
     */
    public DateTime getEventTimestamp() {
        return (DateTime) get(1);
    }

    /**
     * Setter for <code>stevedb.transaction_start.connector_pk</code>.
     */
    public TransactionStartRecord setConnectorPk(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.connector_pk</code>.
     */
    public Integer getConnectorPk() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>stevedb.transaction_start.id_tag</code>.
     */
    public TransactionStartRecord setIdTag(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.id_tag</code>.
     */
    public String getIdTag() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stevedb.transaction_start.start_timestamp</code>.
     */
    public TransactionStartRecord setStartTimestamp(DateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.start_timestamp</code>.
     */
    public DateTime getStartTimestamp() {
        return (DateTime) get(4);
    }

    /**
     * Setter for <code>stevedb.transaction_start.start_value</code>.
     */
    public TransactionStartRecord setStartValue(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>stevedb.transaction_start.start_value</code>.
     */
    public String getStartValue() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, DateTime, Integer, String, DateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, DateTime, Integer, String, DateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TransactionStart.TRANSACTION_START.TRANSACTION_PK;
    }

    @Override
    public Field<DateTime> field2() {
        return TransactionStart.TRANSACTION_START.EVENT_TIMESTAMP;
    }

    @Override
    public Field<Integer> field3() {
        return TransactionStart.TRANSACTION_START.CONNECTOR_PK;
    }

    @Override
    public Field<String> field4() {
        return TransactionStart.TRANSACTION_START.ID_TAG;
    }

    @Override
    public Field<DateTime> field5() {
        return TransactionStart.TRANSACTION_START.START_TIMESTAMP;
    }

    @Override
    public Field<String> field6() {
        return TransactionStart.TRANSACTION_START.START_VALUE;
    }

    @Override
    public Integer component1() {
        return getTransactionPk();
    }

    @Override
    public DateTime component2() {
        return getEventTimestamp();
    }

    @Override
    public Integer component3() {
        return getConnectorPk();
    }

    @Override
    public String component4() {
        return getIdTag();
    }

    @Override
    public DateTime component5() {
        return getStartTimestamp();
    }

    @Override
    public String component6() {
        return getStartValue();
    }

    @Override
    public Integer value1() {
        return getTransactionPk();
    }

    @Override
    public DateTime value2() {
        return getEventTimestamp();
    }

    @Override
    public Integer value3() {
        return getConnectorPk();
    }

    @Override
    public String value4() {
        return getIdTag();
    }

    @Override
    public DateTime value5() {
        return getStartTimestamp();
    }

    @Override
    public String value6() {
        return getStartValue();
    }

    @Override
    public TransactionStartRecord value1(Integer value) {
        setTransactionPk(value);
        return this;
    }

    @Override
    public TransactionStartRecord value2(DateTime value) {
        setEventTimestamp(value);
        return this;
    }

    @Override
    public TransactionStartRecord value3(Integer value) {
        setConnectorPk(value);
        return this;
    }

    @Override
    public TransactionStartRecord value4(String value) {
        setIdTag(value);
        return this;
    }

    @Override
    public TransactionStartRecord value5(DateTime value) {
        setStartTimestamp(value);
        return this;
    }

    @Override
    public TransactionStartRecord value6(String value) {
        setStartValue(value);
        return this;
    }

    @Override
    public TransactionStartRecord values(Integer value1, DateTime value2, Integer value3, String value4, DateTime value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionStartRecord
     */
    public TransactionStartRecord() {
        super(TransactionStart.TRANSACTION_START);
    }

    /**
     * Create a detached, initialised TransactionStartRecord
     */
    public TransactionStartRecord(Integer transactionPk, DateTime eventTimestamp, Integer connectorPk, String idTag, DateTime startTimestamp, String startValue) {
        super(TransactionStart.TRANSACTION_START);

        setTransactionPk(transactionPk);
        setEventTimestamp(eventTimestamp);
        setConnectorPk(connectorPk);
        setIdTag(idTag);
        setStartTimestamp(startTimestamp);
        setStartValue(startValue);
    }
}
